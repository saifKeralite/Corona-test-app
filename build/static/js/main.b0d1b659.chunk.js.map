{"version":3,"sources":["Components/StateLists.js","App.js","reportWebVitals.js","index.js"],"names":["StateLists","state","sData","stateNames","DistrictListActive","stateName","activeCase","confirmedCase","deceasedCase","recoveredCase","fetch","res","json","datas","this","fetchData","stateData","stateNameArray","totalActiveCaseNo","totalRecoveredCaseNo","totalCinfirmedCaseNo","totaldeceasedCaseNo","setState","SData","Object","keys","map","dData","push","districtData","distData","deceased","className","e","i","console","log","Component","App","require","default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEqBA,E,4MAEjBC,MAAQ,CACJC,MAAO,KACPC,WAAY,GACZC,mBAAoB,CAAC,CAAEC,UAAW,GAAIC,WAAY,GAAIC,cAAe,GAAIC,aAAc,GAAIC,cAAe,M,4LAGxFC,MAAM,yD,cAAlBC,E,gBACcA,EAAIC,O,cAAlBC,E,yBAECA,G,4RAIiBC,KAAKC,Y,OAAvBC,E,OACAC,EAAiB,GACnBC,EAAoB,EACpBC,EAAuB,EACvBC,EAAuB,EACvBC,EAAsB,EAG1BP,KAAKQ,SAAS,CAAEC,MAAOP,IAEFQ,OAAOC,KAAKT,GAAWU,KAAI,SAACC,GAE7CV,EAAeW,KAAKD,GACpBR,EAAuB,EACvBD,EAAoB,EACpBE,EAAuB,EACvBC,EAAsB,EAEtBG,OAAOC,KAAKT,EAAUW,GAAOE,cAAcH,KAAI,SAACI,GAC5CZ,GAAqBF,EAAUW,GAAOE,aAAaC,GAA9B,OACrBX,GAAwBH,EAAUW,GAAOE,aAAaC,GAA9B,UACxBV,GAAwBJ,EAAUW,GAAOE,aAAaC,GAA9B,UACxBT,GAAuBL,EAAUW,GAAOE,aAAaC,GAA9B,YAE3B,EAAKR,SAAL,2BACO,EAAKrB,OADZ,IAEIG,mBAAmB,GAAD,mBAAM,EAAKH,MAAMG,oBAAjB,CAClB,CACIC,UAAWsB,EACXrB,WAAYY,EACZT,cAAeU,EACfZ,cAAea,EACfW,SAAUV,WAOtBP,KAAKQ,SAAS,CAAEnB,WAAYc,I,sIAOtB,IAAD,OAGL,OAAwB,MAApBH,KAAKb,MAAMsB,MACH,0CAIJ,sBAAKS,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,UAAf,mBAGA,qBAAKA,UAAU,cAAf,0BAGA,qBAAKA,UAAU,cAAf,6BAGA,qBAAKA,UAAU,cAAf,2BAGA,qBAAKA,UAAU,cAAf,gCAIJ,6BAEQlB,KAAKb,MAAME,WAAWuB,KAAI,SAACO,EAAGC,GAAJ,OACtB,qBAAIT,KAAMS,EAAV,UACI,qBAAKF,UAAU,UAAf,SAA0BC,IAC1B,sBAAKD,UAAU,cAAf,UAEK,EAAK/B,MAAMG,mBAAmB8B,EAAI,GAAG5B,WACrC6B,QAAQC,IAAIF,MAEjB,sBAAKF,UAAU,cAAf,UAEK,EAAK/B,MAAMG,mBAAmB8B,EAAI,GAAGzB,cACrC0B,QAAQC,IAAIF,MAEjB,sBAAKF,UAAU,cAAf,UAEK,EAAK/B,MAAMG,mBAAmB8B,EAAI,GAAGH,SACrCI,QAAQC,IAAIF,MAEjB,sBAAKF,UAAU,cAAf,UAEK,EAAK/B,MAAMG,mBAAmB8B,EAAI,GAAG3B,cACrC4B,QAAQC,IAAIF,qB,GA9GbG,aCInBC,GAJPC,EAAQ,IAASC,Q,uKAO3B,OACE,qBAAKR,UAAU,OAAf,SACE,cAAC,EAAD,U,GALyBK,cCMlBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0d1b659.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class StateLists extends Component {\r\n\r\n    state = {\r\n        sData: null,\r\n        stateNames: [],\r\n        DistrictListActive: [{ stateName: '', activeCase: '', confirmedCase: '', deceasedCase: '', recoveredCase: '' }]\r\n    }\r\n    async fetchData() {\r\n        const res = await fetch('https://api.covid19india.org/state_district_wise.json');\r\n        const datas = await res.json();\r\n\r\n        return datas;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const stateData = await this.fetchData();\r\n        const stateNameArray = [];\r\n        let totalActiveCaseNo = 0;\r\n        let totalRecoveredCaseNo = 0;\r\n        let totalCinfirmedCaseNo = 0;\r\n        let totaldeceasedCaseNo = 0;\r\n\r\n\r\n        this.setState({ SData: stateData });\r\n\r\n        const setStateName = Object.keys(stateData).map((dData) => {\r\n\r\n            stateNameArray.push(dData);\r\n            totalRecoveredCaseNo = 0;\r\n            totalActiveCaseNo = 0;\r\n            totalCinfirmedCaseNo = 0;\r\n            totaldeceasedCaseNo = 0;\r\n\r\n            Object.keys(stateData[dData].districtData).map((distData) => {\r\n                totalActiveCaseNo += stateData[dData].districtData[distData][\"active\"];\r\n                totalRecoveredCaseNo += stateData[dData].districtData[distData][\"recovered\"];\r\n                totalCinfirmedCaseNo += stateData[dData].districtData[distData][\"confirmed\"];\r\n                totaldeceasedCaseNo += stateData[dData].districtData[distData][\"deceased\"];\r\n            });\r\n            this.setState({\r\n                ...this.state,\r\n                DistrictListActive: [...this.state.DistrictListActive,\r\n                {\r\n                    stateName: dData,\r\n                    activeCase: totalActiveCaseNo,\r\n                    recoveredCase: totalRecoveredCaseNo,\r\n                    confirmedCase: totalCinfirmedCaseNo,\r\n                    deceased: totaldeceasedCaseNo\r\n                }\r\n                ]\r\n            })\r\n\r\n        });\r\n\r\n        this.setState({ stateNames: stateNameArray });\r\n        // this.setState({ DistrictListActive: setDistActiveCount })\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n\r\n        if (this.state.SData == null) {\r\n            return (<div>Loading</div>)\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"box\">\r\n                    <div className=\"headeer\">\r\n                        <div className=\"li-name\">\r\n                            State\r\n                        </div>\r\n                        <div className=\"li-each-val\">\r\n                            active cases\r\n                        </div>\r\n                        <div className=\"li-each-val\">\r\n                            Recovered cases\r\n                        </div>\r\n                        <div className=\"li-each-val\">\r\n                            Deceased case\r\n                        </div>\r\n                        <div className=\"li-each-val\">\r\n                            Confirmed Cases\r\n                        </div>\r\n                    </div>\r\n                    <ul>\r\n                        {\r\n                            this.state.stateNames.map((e, i) => (\r\n                                <li keys={i}>\r\n                                    <div className=\"li-name\">{e}</div>\r\n                                    <div className=\"li-each-val\">\r\n                                        {/* active case  */}\r\n                                        {this.state.DistrictListActive[i + 1].activeCase}\r\n                                        {console.log(i)}\r\n                                    </div>\r\n                                    <div className=\"li-each-val\">\r\n                                        {/* Recovered case  */}\r\n                                        {this.state.DistrictListActive[i + 1].recoveredCase}\r\n                                        {console.log(i)}\r\n                                    </div>\r\n                                    <div className=\"li-each-val\">\r\n                                        {/* deceased case  */}\r\n                                        {this.state.DistrictListActive[i + 1].deceased}\r\n                                        {console.log(i)}\r\n                                    </div>\r\n                                    <div className=\"li-each-val\">\r\n                                        {/* confirmedCase    case  */}\r\n                                        {this.state.DistrictListActive[i + 1].confirmedCase}\r\n                                        {console.log(i)}\r\n                                    </div>\r\n\r\n\r\n\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport StateLists from './Components/StateLists';\r\nconst axios = require('axios').default;\r\n//Context for state data\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <StateLists></StateLists>\r\n      </div>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Sass/styles.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}